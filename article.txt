# Vowessly: Cataloging research using semi-structed data

## Introduction: What is Vowessly?
In the autumn of 2010, Laura Wood was beginning research for her PhD. The topic of her research was vowesses: laywomen who had taken a vow of chastity, in the province of Canterbury c. 1450 to 1540. She started by using a spreadsheet to organise her research, which enabled her to make comparisons between vowesses but rapidly became unwieldy because of the variety and quantity of the information involved. The structure of the data did not lend itself well to the column based nature of a spreadsheet. Laura found herself with pages of notes which did not fit precisely into any column. Jon Wood then suggested that a less structured format such as a wiki may be more appropriate. However, we did want to find a way to retain some element of structure. Finding no existing software which fit well, Jon started to build a new piece of software named Vowessly.

Vowessly combines the free text format of a wiki with the more structured properties of a database. Each page consists of a large page body with the option to add facts. These facts can be linked to other pages containing more detail. For example, a page about a vowess may contain some notes in the body, and several facts about that vowess, such as to whom they were married or their parish church. Each fact has the potential to link to another page with more detail. In this way, connections between vowesses can be found. We believe that this approach to cataloguing information could be widely applicable to a range of research topics.

[ TODO: Screenshot of abridged page for Margaret Croke ]

## Prototyping Vowessly

Once the decision had been made that we were going to build a new piece of software for Laura's research, we began by listing what the most important features were and then sketching out how the application would be used. [ TODO: Flesh this out ]

[ TODO: Photo of an interface sketch if I can find it ]

In November 2010, Jon started to use [Ruby on Rails](http://rubyonrail.s.org) and [MongoDB](http://mongodb.org) to build the application, which allowed him to create a basic prototype quickly. The first version of Vowessly allowed for pages to be created, and facts to be attached to those pages. Each page would have a title, a space for content (usually Laura's notes), and what we called a "content type". The content type allowed similar pages to be grouped together, such as "Vowesses", "Parish Churches", or "Wills". The facts attached to a page were used to include more structured data, such as "Birth location" with fields for details on that piece of information, including its source and the date if appropriate. Facts also had a content type, which allowed them to link to a page on that subject if one existed.

This early prototype took only a few days to complete, and allowed us to see how the idea worked in practice, with the ability to create pages and use facts to link between them. It was deployed to [Heroku](http://heroku.com)'s free hosting service, which is adequate for most small applications. At this point Laura started to use Vowessly to record her research.

## Developing the Application

In response to the direction Laura's research has taken and experience of using the application a number of new features have been added to improve Vowessly.

As much of the data entry was repetitive information, autocompletion of content types and page names was added. When Laura started to type a page name a list of possible pages would be preseneted, with the option to select one. At the same time the ability to search facts attached to pages was added: for example, finding all pages linked to the vowess Margaret Croke. This helped in avoiding errors when entering repetitive data.

Laura found that "facts" often carried a lot of additional information. For example, for a vowess' parish church, Laura found that she needed to refer to the history of the church itself, and also to cross reference other people in the database who had a connection with the church. To facilitate this, the ability to create a new page directly from a fact was added. By clicking a "Create Page" button next to the fact, a new page would be created, and automatically linked. By doing so it has been possible to observe connections between people and places, which could then be investigated further. This feature was complicated by unwanted whitespace: during data entry, Laura would accidently copy and paste an extra space at the beginning or end of some data. This would cause the automatic linking to fail, as it was unable to recognise what should have been identical data. To remedy this situation, some code was added to remove any whitespace found at the beginning and end, where it was unlikely that it was required.

Once the data had accumulated, difficulties arose in locating specific information. Several approaches were needed to tackle this issue. Firstly, a generalised search engine was added, allowing for specific text to be found within "facts" and pages. This was implemented using the Open Source search engine [Solr](http://solr.org). However, it was later replaced with MongoDB's own search, as the additional features offered by Solr added unneccessary complexity. Secondly, index pages were added for each type of page, such as "Parish Churches" or "Memorial Brasses". Each of these indexes provides an alphabetical list of all pages sharing a type, with a new index being created any time a new page type is added to the application. Finally, as Laura's research focusses on vowesses from the province of Canterbury, it was helpful to have an index of vowesses specifically by province. This was achieved by adding a fact to each vowess' page, containing the province to which she belonged. The vowesses were then displayed alphabetically by surname, with any known aliases in brackets.

## Vowessly as a Research Tool

## Future Directions

## Conclusion
